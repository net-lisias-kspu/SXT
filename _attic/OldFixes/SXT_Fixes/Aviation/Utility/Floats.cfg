////LF-01A Sea-Float End
//@PART[SXTfloatFront]:FOR[SXT]
//{
//  @description = A pointy end for the LF-01B. Makes sea-floats look more floaty.
//  //@crashTolerance = 100
//  //@breakingForce = 200
//  //@breakingTorque = 200
//  //@maxTemp = 3000 // high
//  @entryCost = 800 // 0
//  @cost = 250 // 50
//  %bulkheadProfiles = srf, size1 // size0 (check)
//  tags = float airplane plane water pontoon landing
//  @MODULE[FSbuoyancy]
//  {
//    //@buoyancyForce = 40.0
//    //@waterImpactTolerance = 180
//  	//@dragInWater = 0.2
//    //%debugMode = False // added
//    %splashFXEnabled = False // added
//  }
//}
//
////LF-01B Sea-Float Midsection
//@PART[SXTfloatMid]:FOR[SXT]
//{
//  //@crashTolerance = 100
//  //@breakingForce = 200
//  //@breakingTorque = 200
//  //@maxTemp = 3000 // high
//  @entryCost = 800 // 0
//  @cost = 250 // 50
//  %bulkheadProfiles = srf, size1 // size0 (check)
//  tags = float airplane plane water pontoon landing
//  @MODULE[FSbuoyancy]
//  {
//    //@buoyancyForce = 40.0
//    //@waterImpactTolerance = 180
//  	//@dragInWater = 0.2
//    //%debugMode = False // added
//    %splashFXEnabled = False // added
//  }
//}
//
////LF-01B Sea-Float Outrigger
//@PART[SXTfloatOutboard]:FOR[SXT]
//{
//  //@crashTolerance = 100
//  //@breakingForce = 200
//  //@breakingTorque = 200
//  //@maxTemp = 3000 // high
//  //@entryCost = 600
//  //@cost = 150 // 50
//  %bulkheadProfiles = srf
//  tags = float airplane plane water pontoon landing
//  @MODULE[FSbuoyancy]
//  {
//    //@buoyancyForce = 40.0
//    //@waterImpactTolerance = 180
//  	//@dragInWater = 0.2
//    //%debugMode = False // added
//    %splashFXEnabled = False // added
//  }
//}
//
////MODULE
////{
////	name = FSbuoyancy
////	buoyancyForce = 0.0 // the force applied to lift the part, scaled by depth according to buoyancyRange
////	buoyancyRange = 1.0 // the max depth at which the buoyancy will be scaled up. at this depth, the force applied is equal to buyoancyForce. At 0 depth, the force is 0
////	buoyancyVerticalOffset = .5 // how high the part rides on the water in meters. Not a position offset inside the part. This will be applied in the global axis regardless of part rotation. Think iceberg/styrofoam.
////	maxVerticalSpeed = 0.2 // the max speed vertical speed at which there will be a liftng force applied. Reduces bobbing.
////	dragInWater = 1.5 // when in water, apply drag to slow the craft down. Stock drag is 3.
////	debugMode = False // enables buoyancy control context menus
////	waterImpactTolerance = 250 // For sea planes, any part in the water during take off should have a resistance high enough to withstand take off speeds.
////	splashFXEnabled = False // on by default, creates splashes even deep under water currently...
////}
